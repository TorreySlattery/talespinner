# Generated by Django 3.0.5 on 2020-05-01 17:22

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Condition",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name="Creature",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("display_name", models.CharField(max_length=255)),
                ("current_hp", models.PositiveSmallIntegerField(default=50)),
                (
                    "alignment",
                    models.CharField(
                        choices=[
                            ("LG", "Lawful Good"),
                            ("LN", "Lawful Neutral"),
                            ("LE", "Lawful Evil"),
                            ("NG", "Neutral Good"),
                            ("N", "Neutral"),
                            ("NE", "Neutral Evil"),
                            ("CG", "Chaotic Good"),
                            ("CN", "Chaotic Neutral"),
                            ("CE", "Chaotic Evil"),
                            ("U", "Unaligned"),
                        ],
                        default="A",
                        max_length=3,
                    ),
                ),
                ("current_initiative", models.SmallIntegerField(default=0)),
                (
                    "conditions",
                    models.ManyToManyField(blank=True, to="creatures.Condition"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="EncounterGroup",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name="Language",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name="Trait",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name="Sense",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("range", models.PositiveSmallIntegerField(default=60)),
            ],
            options={"unique_together": {("name", "range")},},
        ),
        migrations.CreateModel(
            name="Race",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("type", models.CharField(max_length=255)),
                ("subtype", models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={"unique_together": {("type", "subtype")},},
        ),
        migrations.CreateModel(
            name="Encounter",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField()),
                (
                    "encounter_group",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="encounters",
                        to="creatures.EncounterGroup",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CreatureTemplate",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                (
                    "size",
                    models.CharField(
                        choices=[
                            ("T", "Tiny"),
                            ("S", "Small"),
                            ("M", "Medium"),
                            ("L", "Large"),
                            ("H", "Huge"),
                            ("C", "Colossal"),
                            ("G", "Gargantuan"),
                        ],
                        default="M",
                        max_length=5,
                    ),
                ),
                ("str", models.PositiveSmallIntegerField(default=10)),
                ("dex", models.PositiveSmallIntegerField(default=10)),
                ("con", models.PositiveSmallIntegerField(default=10)),
                ("int", models.PositiveSmallIntegerField(default=10)),
                ("wis", models.PositiveSmallIntegerField(default=10)),
                ("cha", models.PositiveSmallIntegerField(default=10)),
                ("speed", models.PositiveSmallIntegerField(default=30)),
                ("min_hp", models.PositiveSmallIntegerField(default=1)),
                (
                    "avg_hp",
                    models.PositiveSmallIntegerField(
                        default=50, help_text="The listed health"
                    ),
                ),
                ("max_hp", models.PositiveSmallIntegerField(default=1000)),
                (
                    "alignment",
                    models.CharField(
                        choices=[
                            ("LG", "Lawful Good"),
                            ("LN", "Lawful Neutral"),
                            ("LE", "Lawful Evil"),
                            ("NG", "Neutral Good"),
                            ("N", "Neutral"),
                            ("NE", "Neutral Evil"),
                            ("CG", "Chaotic Good"),
                            ("CN", "Chaotic Neutral"),
                            ("CE", "Chaotic Evil"),
                            ("U", "Unaligned"),
                            ("A", "Any alignment"),
                            ("AG", "Any Good"),
                            ("AE", "Any Evil"),
                            ("ANL", "Any non-lawful"),
                        ],
                        default="A",
                        max_length=3,
                    ),
                ),
                ("challenge_rating", models.FloatField(default=1)),
                ("experience", models.PositiveIntegerField(default=0)),
                ("ac", models.PositiveSmallIntegerField(default=10)),
                ("acrobatics", models.SmallIntegerField(default=0)),
                ("animal_handling", models.SmallIntegerField(default=0)),
                ("arcana", models.SmallIntegerField(default=0)),
                ("athletics", models.SmallIntegerField(default=0)),
                ("deception", models.SmallIntegerField(default=0)),
                ("history", models.SmallIntegerField(default=0)),
                ("insight", models.SmallIntegerField(default=0)),
                ("intimidation", models.SmallIntegerField(default=0)),
                ("investigation", models.SmallIntegerField(default=0)),
                ("medicine", models.SmallIntegerField(default=0)),
                ("nature", models.SmallIntegerField(default=0)),
                ("perception", models.SmallIntegerField(default=0)),
                ("performance", models.SmallIntegerField(default=0)),
                ("persuasion", models.SmallIntegerField(default=0)),
                ("religion", models.SmallIntegerField(default=0)),
                ("sleight_of_hand", models.SmallIntegerField(default=0)),
                ("stealth", models.SmallIntegerField(default=0)),
                ("survival", models.SmallIntegerField(default=0)),
                ("str_save", models.SmallIntegerField(default=0)),
                ("dex_save", models.SmallIntegerField(default=0)),
                ("con_save", models.SmallIntegerField(default=0)),
                ("int_save", models.SmallIntegerField(default=0)),
                ("wis_save", models.SmallIntegerField(default=0)),
                ("cha_save", models.SmallIntegerField(default=0)),
                (
                    "condition_immunities",
                    models.ManyToManyField(blank=True, to="creatures.Condition"),
                ),
                ("languages", models.ManyToManyField(to="creatures.Language")),
                ("senses", models.ManyToManyField(to="creatures.Sense")),
                ("traits", models.ManyToManyField(blank=True, to="creatures.Trait")),
            ],
        ),
        migrations.CreateModel(
            name="CreatureHistory",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("entry", models.TextField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "creature",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="creatures.Creature",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="creature",
            name="encounter",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="creatures",
                to="creatures.Encounter",
            ),
        ),
        migrations.AddField(
            model_name="creature",
            name="template",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="creatures",
                to="creatures.CreatureTemplate",
            ),
        ),
        migrations.CreateModel(
            name="Attack",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField(null=True)),
                ("to_hit_mod", models.PositiveSmallIntegerField(default=3)),
                ("num_dice", models.PositiveSmallIntegerField(default=1)),
                (
                    "die_step",
                    models.PositiveSmallIntegerField(
                        default=6, help_text="Basically the number of sides on the die"
                    ),
                ),
                ("dmg_mod", models.SmallIntegerField(default=2)),
                (
                    "dmg_avg",
                    models.SmallIntegerField(
                        default=4, help_text="For when people don't like rolling."
                    ),
                ),
                (
                    "dmg_type",
                    models.CharField(
                        choices=[
                            ("acid", "acid"),
                            ("bludgeoning", "bludgeoning"),
                            ("cold", "cold"),
                            ("fire", "fire"),
                            ("force", "force"),
                            ("lightning", "lightning"),
                            ("necrotic", "necrotic"),
                            ("piercing", "piercing"),
                            ("poison", "poison"),
                            ("slashing", "slashing"),
                            ("thunder", "thunder"),
                        ],
                        max_length=255,
                    ),
                ),
                ("dmg_is_magic", models.BooleanField(default=False)),
                (
                    "template",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="attacks",
                        to="creatures.CreatureTemplate",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Action",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField(null=True)),
                (
                    "template",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="actions",
                        to="creatures.CreatureTemplate",
                    ),
                ),
            ],
        ),
    ]
